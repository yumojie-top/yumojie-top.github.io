<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo 中 Markdown基本语法</title>
      <link href="/2020/06/11/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/06/11/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><p>优点：<br>1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。<br>2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可<br>缺点：<br>1、需要记一些语法（当然，是很简单。五分钟学会）。<br>2、有些平台不支持Markdown编辑模式。</p><h3 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h3><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><p>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。</p><p><strong>示例</strong></p><pre><code># 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题</code></pre><hr><h3 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h3><p><strong>加粗</strong></p><p>要加粗的文字左右分别用两个*号包起来</p><p><strong>斜体</strong></p><p>要倾斜的文字左右分别用一个*号包起来</p><p><strong>斜体加粗</strong><br>要倾斜和加粗的文字左右分别用三个*号包起来</p><p><strong>删除线</strong><br>要加删除线的文字左右分别用两个~~号包起来</p><p><strong>示例</strong></p><pre><code>**这是加粗的文字***这是倾斜的文字*`***这是斜体加粗的文字***~~这是加删除线的文字~~</code></pre><p><strong>效果</strong></p><p><strong>这是加粗的文字</strong></p><p><em>这是倾斜的文字</em></p><p><strong><em>这是斜体加粗的文字</em></strong></p><p><del>这是加删除线的文字</del></p><hr><h3 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h3><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>貌似可以一直加下去，但没神马卵用</p><p><strong>示例：</strong></p><pre><code>&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</code></pre><p><strong>效果如下：</strong></p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><hr><h3 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h3><p>三个或者三个以上的 - 或者 * 都可以。</p><p><strong>示例：</strong></p><pre><code>-------********</code></pre><p><strong>效果如下：</strong><br>可以看到，显示效果是一样的。</p><hr><hr><hr><hr><h3 id="五、图片"><a href="#五、图片" class="headerlink" title="五、图片"></a>五、图片</h3><p><strong>语法：</strong></p><pre><code>![图片alt](图片地址 "title")hexo的markdown目前只能访问当前项目下的图片图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</code></pre><p><strong>效果如下：</strong></p><p><img src="/medias/cover.jpg" alt="动漫" title="天马行空"></p><hr><p>上传本地图片直接点击导航栏的图片标志，选择图片即可<br>markdown格式追求的是简单、多平台统一。那么图片的存储就是一个问题，需要用图床，提供统一的外链，这样就不用在不同的平台去处理图片的问题了。才能做到书写一次，各处使用。<br>关于图床的选择我写了一篇文章，对网上存在的各种方法做了总结，需要的朋友可以看看。<a href="https://www.jianshu.com/p/ea1eb11db63f" target="_blank" rel="noopener">markdown图床</a></p><hr><h3 id="六、超链接"><a href="#六、超链接" class="headerlink" title="六、超链接"></a>六、超链接</h3><p><strong>语法：</strong></p><pre><code>[超链接名](超链接地址 "超链接title")title可加可不加</code></pre><p><strong>效果如下：</strong><br><a href="http://jianshu.com" target="_blank" rel="noopener">简书</a><br><a href="http://baidu.com" target="_blank" rel="noopener">百度</a></p><hr><h3 id="七、列表"><a href="#七、列表" class="headerlink" title="七、列表"></a>七、列表</h3><p><strong>无序列表</strong><br><strong>语法：</strong><br>无序列表用 - + * 任何一种都可以</p><pre><code>- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格</code></pre><p><strong>效果如下：</strong></p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><p><strong>有序列表</strong><br><strong>语法：</strong><br>数字加点</p><pre><code>1. 列表内容2. 列表内容3. 列表内容注意：序号跟内容之间要有空格</code></pre><p><strong>效果如下：</strong></p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><p><strong>列表嵌套<br>上一级和下一级之间敲三个空格即可<br>语法：</strong></p><pre><code>- 列表内容   - 列表1+ 列表内容   + 列表2* 列表内容   * 列表31. 列表内容   1.1 列表内容12. 列表内容   2.1 列表内容23. 列表内容   3.1 列表内容3</code></pre><p><strong>效果如下：</strong></p><ul><li>列表内容<ul><li>列表1</li></ul></li></ul><ul><li>列表内容<ul><li>列表2</li></ul></li></ul><ul><li>列表内容<ul><li>列表3</li></ul></li></ul><ol><li>列表内容<br>1.1 列表内容1</li><li>列表内容<br>2.1 列表内容2</li><li>列表内容<br>3.1 列表内容3</li></ol><hr><h3 id="八、hexo中使用表格"><a href="#八、hexo中使用表格" class="headerlink" title="八、hexo中使用表格"></a>八、hexo中使用表格</h3><p><strong>语法：</strong></p><pre><code>| 表头 | 表头 | 表头 || --- | :--: | ---: || 内容 | 内容 | 内容 || 内容 | 内容 | 内容 |第二行分割表头和内容。| 与文字之间要有空格隔开- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略</code></pre><p><strong>示例：</strong></p><pre><code>| 位运算     | 符号   | 计算             || ---------- | ------ | ---------------- || 按位与     | &amp;      | 相同为1，不同为0 || 按位或     | &amp;#124;         | 有1则1           || 按位异或   | ^      | 相同为0，不同位1 || 按位取反   | ~      |                  || 左移       | &lt;&lt;     | 相当于乘以2^n^   || 右移       | `&gt;&gt;`   | 相当于除以2^n^   || 无符号右移 | `&gt;&gt;&gt;`  |                  |</code></pre><p><strong>效果如下：</strong></p><table><thead><tr><th>位运算</th><th>符号</th><th>计算</th></tr></thead><tbody><tr><td>按位与</td><td>&amp;</td><td>相同为1，不同为0</td></tr><tr><td>按位或</td><td>|</td><td>有1则1</td></tr><tr><td>按位异或</td><td>^</td><td>相同为0，不同位1</td></tr><tr><td>按位取反</td><td>~</td><td></td></tr><tr><td>左移</td><td>&lt;&lt;</td><td>相当于乘以2^n^</td></tr><tr><td>右移</td><td><code>&gt;&gt;</code></td><td>相当于除以2^n^</td></tr><tr><td>无符号右移</td><td><code>&gt;&gt;&gt;</code></td><td></td></tr></tbody></table><hr><h3 id="九、代码"><a href="#九、代码" class="headerlink" title="九、代码"></a>九、代码</h3><p><strong>语法：</strong><br>单行代码：代码之间分别用一个反引号包起来</p><pre><code>   `代码内容`</code></pre><p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><pre><code>(```)  代码...  代码...  代码...(```)</code></pre><p><code>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可</code></p><p>作者：高鸿祥<br>链接：<a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">https://www.jianshu.com/p/191d1e21f7ed</a><br>來源：简书<br>简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其它 </tag>
            
            <tag> 编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test2</title>
      <link href="/2020/06/11/test2/"/>
      <url>/2020/06/11/test2/</url>
      
        <content type="html"><![CDATA[<h2 id="date-2020-06-11-10-38-00"><a href="#date-2020-06-11-10-38-00" class="headerlink" title="date: 2020-06-11 10:38:00"></a>date: 2020-06-11 10:38:00</h2><p>this is my first witer blog<br>this is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blog</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
            <tag> 表格 </tag>
            
            <tag> 表单验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2020/06/11/test/"/>
      <url>/2020/06/11/test/</url>
      
        <content type="html"><![CDATA[<p>test1this is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blogthis is my first witer blog</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>myblog</title>
      <link href="/2020/06/11/myblog/"/>
      <url>/2020/06/11/myblog/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/06/10/hello-world/"/>
      <url>/2020/06/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
